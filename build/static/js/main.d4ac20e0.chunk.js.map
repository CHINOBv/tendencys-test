{"version":3,"sources":["utils/FetchAPI.js","components/Header.js","components/Alert.js","components/AddProduct.js","components/OrderInfo.js","components/Products.js","App.js","reportWebVitals.js","index.js"],"names":["URL","headers","Authorization","process","getOrderById","id","axios","Header","setOrderInfo","orderInfo","useState","orders","setOrders","useEffect","then","response","data","fetchAPI","a","console","log","trim","order","selectOptions","map","name","replace","vlue","label","className","number","style","width","color","zIndex","options","onChange","e","placeholder","SwalError","withReactContent","Swal","AlertError","title","message","fire","text","icon","SwalSuccess","AlertSucces","button","AddProduct","setFetch","sku","setSku","setName","quantity","setQuantity","price","setPrice","validSku","setValidSku","validName","setValidName","validQuantity","setValidQuantity","validPrice","setValidPrice","onSubmit","preventDefault","test","newProduct","uuidV4","fulfillment","orderId","productsLS","JSON","parse","localStorage","getItem","push","setItem","stringify","addProduct","htmlFor","required","autoComplete","type","autoFocus","value","target","onBlur","formNoValidate","data-dismiss","OrderInfo","createdAt","total","toLocaleString","status","financial","data-toggle","data-target","data-whatever","onClick","Products","products","setProducts","fetch","setTotal","res","datas","filter","items","totalLS","i","length","parseFloat","totalAPI","totals","toFixed","Date","dates","tabIndex","aria-hidden","scope","product","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ac20e0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet URL = \"https://eshop-deve.herokuapp.com/api/v2/orders\";\n\nconst headers = {\n  Authorization: `${process.env.REACT_APP_API_TOKEN}`,\n};\nexport const getOrders = () => {\n  return axios(URL, {\n    headers,\n  });\n};\n\nexport const getOrderById = (id) => {\n  return axios(`${URL}/${id}`, {\n    headers,\n  });\n};\n","import { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\n\nimport { getOrders, getOrderById } from \"../utils/FetchAPI\";\n\nconst Header = ({ setOrderInfo, orderInfo }) => {\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    getOrders().then((response) => setOrders(response.data.orders));\n  }, []);\n\n  const fetchAPI = async (id) => {\n    console.log(id);\n    if (id?.trim()) {\n      getOrderById(id).then((response) => {\n        setOrderInfo([]);\n        setOrderInfo(response.data.order);\n      });\n    }\n  };\n\n  const selectOptions = orders.map((order) => {\n    let regx = /#/g;\n    let name = order?.name?.replace(regx, \"\");\n    return {\n      vlue: order.id,\n      label: name,\n    };\n  });\n\n  return (\n    <nav className=\"navbar navbar-dark bg-dark mb-4 bg-header\">\n      <h4 className=\"navbar-brand text-wrap\">\n        {!orderInfo?.name?.trim()\n          ? \"Select a Order\"\n          : `Number Of Order: ${orderInfo.number}`}\n      </h4>\n      <div className=\"w-5\" style={{ width: \"300px\", color: \"#000\", zIndex: 10 }}>\n        <Select\n          options={selectOptions}\n          onChange={(e) => fetchAPI(e.vlue)}\n          placeholder=\"Select You Order\"\n\n        />\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\n\nconst SwalError = withReactContent(Swal);\n\nexport const AlertError = ({ title, message }) => {\n  SwalError.fire({\n    title: title,\n    text: message,\n    icon: \"error\",\n  });\n};\nconst SwalSuccess = withReactContent(Swal);\nexport const AlertSucces = ({ title, message }) => {\n  SwalSuccess.fire({\n    title: title,\n    text: message,\n    icon: \"success\",\n    button: \"Acept\",\n  });\n};\n","import { useState } from \"react\";\n\nimport { AlertError, AlertSucces } from \"../components/Alert\";\nimport { v4 as uuidV4 } from \"uuid\";\n\nconst AddProduct = ({ id, setFetch }) => {\n\n  const [sku, setSku] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [quantity, setQuantity] = useState(0);\n  const [price, setPrice] = useState(0);\n\n  const [validSku, setValidSku] = useState(\"\");\n  const [validName, setValidName] = useState(\"\");\n  const [validQuantity, setValidQuantity] = useState(\"\");\n  const [validPrice, setValidPrice] = useState(\"\");\n\n  const addProduct = (e) => {\n    e.preventDefault();\n\n    if (!sku.trim() || !name.trim() || quantity <= 0 || price <= 0) {\n      AlertError({\n        title: \"All Fields Are Required\",\n        message: \"Please Fill All Fields\",\n      });\n\n      return;\n    }\n    //Verify if Quantity is Float\n    let validFloatREGX = /^\\d*$/;\n    if(!validFloatREGX.test(quantity)){\n      AlertError({\n        title: \"Quantity Number not Allowed\",\n        message: \"The quantity can only be a whole number\",\n      });\n      return;\n    }\n\n    let newProduct = {\n      id: uuidV4(),\n      sku,\n      name,\n      fulfillment: { quantity },\n      price,\n      orderId: id,\n    };\n    const productsLS = JSON.parse(localStorage.getItem(\"products\"));\n    productsLS?.push(newProduct);\n\n    localStorage.setItem(\n      \"products\",\n      productsLS ? JSON.stringify(productsLS) : JSON.stringify([newProduct])\n    );\n    AlertSucces({\n      title: \"Added product\",\n      message: \"The Product has been successfully Added to the Order\",\n    });\n\n    setName(\"\");\n    setSku(\"\");\n    setQuantity(0);\n    setPrice(0);\n    setFetch(true);\n  };\n\n  return (\n    <div className=\"row w-100 m-auto\">\n      <div className=\"card text-center m-auto\">\n        <h5 className=\"card-title pt-3\">Add New Product</h5>\n        <form className=\"card-body\" onSubmit={(e) => addProduct(e)}>\n          <div className=\"form m-auto\">\n            <div className=\"form-group col-md-8 m-auto\">\n              <label htmlFor=\"sku\">SKU</label>\n              <input\n                required\n                autoComplete=\"off\"\n                type=\"text\"\n                className={`form-control mb-md-3 ${validSku}`}\n                id=\"sku\"\n                placeholder=\"sku for this product...\"\n                autoFocus\n                value={sku}\n                onChange={(e) => setSku(e.target.value)}\n                onBlur={() =>\n                  setValidSku(!sku.trim() ? \"is-invalid\" : \"is-valid\")\n                }\n              />\n              <div className=\"invalid-feedback\">Please Add a SKU</div>\n            </div>\n            <div className=\"form-group col-md-8 m-auto\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                required\n                autoComplete=\"off\"\n                type=\"text\"\n                className={`form-control mb-md-3 ${validName}`}\n                id=\"name\"\n                placeholder=\"name for this product...\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                onBlur={() =>\n                  setValidName(!name.trim() ? \"is-invalid\" : \"is-valid\")\n                }\n              />\n              <div className=\"invalid-feedback\">Please Add a Name</div>\n            </div>\n          </div>\n          <div className=\"form-row m-auto col-md-8\">\n            <div className=\"form-group col-md-4\">\n              <label htmlFor=\"sku\">Quantity</label>\n              <input\n                required\n                autoComplete=\"off\"\n                type=\"number\"\n                className={`form-control ${validQuantity}`}\n                id=\"sku\"\n                placeholder=\"0\"\n                value={quantity}\n                onChange={(e) => setQuantity(e.target.value)}\n                onBlur={() =>\n                  setValidQuantity(quantity <= 0 ? \"is-invalid\" : \"is-valid\")\n                }\n              />\n              <div className=\"invalid-feedback\">Please Add a Quantity</div>\n            </div>\n            <div className=\"form-group col-md-8 \">\n              <label htmlFor=\"name\">Price</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">$</div>\n                </div>\n                <input\n                  required\n                  formNoValidate\n                  autoComplete=\"off\"\n                  type=\"number\"\n                  className={`form-control ${validPrice}`}\n                  id=\"name\"\n                  placeholder=\"0\"\n                  value={price}\n                  onChange={(e) => setPrice(e.target.value)}\n                  onBlur={() =>\n                    setValidPrice(price <= 0 ? \"is-invalid\" : \"is-valid\")\n                  }\n                />\n                <div className=\"invalid-feedback\">Please Add a Price</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md mb-4\">\n              <button type=\"submit\" className=\"btn btn-block btn-success\">\n                Add\n              </button>\n            </div>\n            <div className=\"col-md\">\n              <button\n                className=\"btn btn-block btn-outline-danger\"\n                data-dismiss=\"modal\"\n              >\n                {!sku.trim() && !name.trim() && quantity <= 0 && price <= 0\n                  ? \"Go Back\"\n                  : \"Cancel\"}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProduct;\n","const OrderInfo = ({ orderInfo, AlertSucces, createdAt, total }) => {\n  return (\n    <>\n      <div className=\"col-md-4 col-sm w-100 mb-4\">\n        <ul className=\"list-group\">\n          <li className=\"list-group-item active text-center\">\n            Order Information\n          </li>\n          <li className=\"list-group-item\">Order ID: {orderInfo.id}</li>\n          <li className=\"list-group-item\">Order of Number: {orderInfo.number}</li>\n          <li className=\"list-group-item\">Order Name: {orderInfo.name}</li>\n          <li className=\"list-group-item\">\n            Crated At: {createdAt.toLocaleString(\"es-MX\")}\n          </li>\n          <li className=\"list-group-item\">\n            Status:\n            <span className=\"text-capitalize\">\n              {orderInfo.status?.financial}\n            </span>\n          </li>\n          <li className=\"list-group-item\">\n            Total Cost:\n            {total}\n          </li>\n          <li className=\"list-group-item\">\n            <button\n              className=\"btn  d-block btn-outline-primary w-100\"\n              type=\"button\"\n              data-toggle=\"modal\"\n              data-target=\"#formModal\"\n              data-whatever=\"@mdo\"\n            >\n              Add Product\n            </button>\n            <button\n              onClick={() =>\n                AlertSucces({\n                  title: \"Payment Made\",\n                  message: \"Your payment has been successful\",\n                })\n              }\n              className=\"btn btn-success d-block w-100 mt-4\"\n            >\n              Pay\n            </button>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default OrderInfo;\n","import { useState, useEffect } from \"react\";\n\nimport { getOrderById } from \"../utils/FetchAPI\";\nimport AddProduct from \"./AddProduct\";\nimport { AlertSucces } from \"./Alert\";\nimport OrderInfo from \"./OrderInfo\";\n\nconst Products = ({ orderInfo }) => {\n  const { id } = orderInfo;\n\n  const [products, setProducts] = useState([]);\n  const [fetch, setFetch] = useState(false);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    //Fetching API\n    const fetchAPI = () => {\n      getOrderById(id).then((res) => {\n        //Save products on State\n        const datas = JSON.parse(localStorage.getItem(\"products\"));\n        if (datas) {\n          const data = datas.filter((data) => data.orderId === id);\n          setProducts(() => [...res.data.order.items, ...data]);\n\n          let totalLS = 0;\n          for (var i = 0; i < data.length; i++) {\n            totalLS += parseFloat(data[i].price * data[i].fulfillment.quantity);\n          }\n\n          let totalAPI = parseFloat(orderInfo.totals?.total);\n          setTotal(parseFloat(totalAPI + totalLS).toFixed(2));\n        }\n      });\n    };\n    fetchAPI();\n    if (fetch) {\n      setFetch(false);\n    }\n  }, [fetch, setTotal, setProducts, setFetch, id, orderInfo.totals?.total]);\n\n  //Create Format of date for show\n  const createdAt = new Date(orderInfo.dates?.createdAt);\n  return (\n    <>\n      <div className=\"container\">\n        <div\n          className=\"modal fade\"\n          id=\"formModal\"\n          tabIndex={-1}\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\">\n            <div className=\"modal-content\">\n              <AddProduct id={id} setFetch={setFetch} />\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-cols\">\n          <OrderInfo\n            orderInfo={orderInfo}\n            createdAt={createdAt}\n            AlertSucces={AlertSucces}\n            total={total}\n          />\n          <div className=\"col-md-8 col-sm-12\">\n            <div className=\"table-wrapper-scroll-y my-custom-scrollbar w-100\">\n              <table className=\"table table-striped table-responsive-sm table-light rounded\">\n                <thead className=\"bg-header\">\n                  <tr className=\"\">\n                    <th scope=\"col\">SKU</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Quantity</th>\n                    <th scope=\"col\">Price</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {products.map((product) => (\n                    <tr key={product.id}>\n                      <td>{product.sku}</td>\n                      <td>{product.name}</td>\n                      <td>{product.fulfillment.quantity}</td>\n                      <td>{product.price}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n","import { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Products from \"./components/Products\";\n\nfunction App() {\n  const [orderInfo, setOrderInfo] = useState([]);\n\n  return (\n    <>\n      <Header setOrderInfo={setOrderInfo} orderInfo={orderInfo} />\n      {orderInfo.items?.length > 0 ? (\n        <Products orderInfo={orderInfo} />\n      ) : (\n        <>\n          <div className=\"container\">\n            <h1 className=\"text-center font-weight-bold\">\n              Pleas Select a Order\n            </h1>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}